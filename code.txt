

const filterevents = async (req, res, eventData) => {
    const filter = req.params.filter
    // const query = await eventData.find({});
    // res.send(`<h1>hello ${query} from functions hehehe</h1>`);
    let result1 = await userData.findOne({ _id: req.session.user._id })

    // ---------------------------------------ALL OVER IFFING -----------------------------------------------
    if (filter == "allover") {




        if (result1.u_phone == null && result1.u_city == null) {
            req.flash("UserDetails", "number and city not found!  ")//abhishek
            return res.render("event", { msg: req.flash(), events: null })// abhishek 
        }
        else {

            let result2 = await eventData.find({});
            req.flash("check", "success ")
            // console.log(result2);

            const liked = false;

            // eventcreated start here 
            let Number_of_event_created = await eventData.find({ e_org_id: result1._id });
            let no_event = Number_of_event_created.length;
            // eventcreated end here 

            //joined event start here 
            let joinedEvents = result2.filter(event => event.e_joinies.includes(result1._id));
            let no_joined_event = joinedEvents.length;
            //joined event end here


            // console.log(result2.length);



            res.render("filter", {
                msg: req.flash(),
                events: result2,
                profile: result1,
                cmt: result2[0]?.e_comments || [], // Use optional chaining to handle potential undefined value
                cmtpp: result2[0]?.e_comments[0]?.event_profile_image || null, // Use optional chaining to handle potential undefined value
                no_event: no_event,
                no_join_event: no_joined_event,
                event_joines_info: [],
            });

        }
        //---------------------if all over ends-----------------------------------

    } else if (filter == "trending") {
        // res.send(`<h1>hello ${filter} from functions hehehe</h1>`);
        //-------------------------------------------------------------trending filter Starts ---------------------------------------------



        if (result1.u_phone == null && result1.u_city == null) {
            req.flash("UserDetails", "number and city not found!  ")//abhishek
            return res.render("event", { msg: req.flash(), events: null })// abhishek 
        }
        else {

            let result2 = await eventData.find({}).sort({ "e_likes_count": -1 });
            req.flash("check", "success ")
            // console.log(result2);

            const liked = false;

            // eventcreated start here 
            let Number_of_event_created = await eventData.find({ e_org_id: result1._id });
            let no_event = Number_of_event_created.length;
            // eventcreated end here 

            //joined event start here 
            let joinedEvents = result2.filter(event => event.e_joinies.includes(result1._id));
            let no_joined_event = joinedEvents.length;
            //joined event end here


            // console.log(result2.length);



            res.render("filter", {
                msg: req.flash(),
                events: result2,
                profile: result1,
                cmt: result2[0]?.e_comments || [], // Use optional chaining to handle potential undefined value
                cmtpp: result2[0]?.e_comments[0]?.event_profile_image || null, // Use optional chaining to handle potential undefined value
                no_event: no_event,
                no_join_event: no_joined_event,
                event_joines_info: [],
            });

        }




        // -------------------------------------------------------------trending filter ends ---------------------------------------------
    } else if (filter == "recent") {
        // res.send(`<h1>hello ${filter} from functions hehehe</h1>`);
//------Recent filter Starts ------------------------------------------------------------ ---------------------------------------------





        if (result1.u_phone == null && result1.u_city == null) {
            req.flash("UserDetails", "number and city not found!  ")//abhishek
            return res.render("event", { msg: req.flash(), events: null })// abhishek 
        }
        else {

            let result2 = await eventData.find({}).sort({ "createdAt": -1 });
            req.flash("check", "success ")
            // console.log(result2);

            const liked = false;

            // eventcreated start here 
            let Number_of_event_created = await eventData.find({ e_org_id: result1._id });
            let no_event = Number_of_event_created.length;
            // eventcreated end here 

            //joined event start here 
            let joinedEvents = result2.filter(event => event.e_joinies.includes(result1._id));
            let no_joined_event = joinedEvents.length;
            //joined event end here


            // console.log(result2.length);



            res.render("filter", {
                msg: req.flash(),
                events: result2,
                profile: result1,
                cmt: result2[0]?.e_comments || [], // Use optional chaining to handle potential undefined value
                cmtpp: result2[0]?.e_comments[0]?.event_profile_image || null, // Use optional chaining to handle potential undefined value
                no_event: no_event,
                no_join_event: no_joined_event,
                event_joines_info: [],
            });

        }






//-------Recent filter Ends ----------------------------------------------------------------------------------------------------------

    }else if (filter == "upcomingevents") {//-------upcomingevents filter Starts--------------------------------------------------------





        if (result1.u_phone == null && result1.u_city == null) {
            req.flash("UserDetails", "number and city not found!  ")//abhishek
            return res.render("event", { msg: req.flash(), events: null })// abhishek 
        }
        else {

            let result2 = await eventData.find({}).sort({ "e_date": +1 });
            req.flash("check", "success ")
            // console.log(result2);

            const liked = false;

            // eventcreated start here 
            let Number_of_event_created = await eventData.find({ e_org_id: result1._id });
            let no_event = Number_of_event_created.length;
            // eventcreated end here 

            //joined event start here 
            let joinedEvents = result2.filter(event => event.e_joinies.includes(result1._id));
            let no_joined_event = joinedEvents.length;
            //joined event end here


            // console.log(result2.length);



            res.render("filter", {
                msg: req.flash(),
                events: result2,
                profile: result1,
                cmt: result2[0]?.e_comments || [], // Use optional chaining to handle potential undefined value
                cmtpp: result2[0]?.e_comments[0]?.event_profile_image || null, // Use optional chaining to handle potential undefined value
                no_event: no_event,
                no_join_event: no_joined_event,
                event_joines_info: [],
            });

        }



//-------upcomingeventsfilter Ends ----------------------------------------------------------------------------------------------------------
    }


}


